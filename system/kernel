local _build = 25
local args = { ... }

local _running = true

flags = {
    ["--silent"] = false,
    ["--force"] = false
}

local modules = {
	"Directory",
	"Logger",
	"Screen",
	"String",
	"System",
	"Internet",
}

function load_module(module_name)
	dofile("/system/modules/" .. module_name .. ".mm.lua")
end

function unload_module(module_name)
	_ENV[module_name] = nil
end

function kmain( ... )
	for i = 1, #modules do
		load_module(modules[i])
	end

	Logger.start()
	System.println("Loading MaCCOS kernel [build " .. _build .. "]")

	dofile("/system/system.lua")
	dofile("/system/init")

	state = start()
	if state == 0 then
		while _running do
			loop()
		end
	else
		printError("Error code: " .. tostring(state))
	end
    
	stop()
	Logger.stop()
end

local ok, err = pcall(function() kmain(unpack(args)) end)
if not ok then
	load_module("Logger")
    load_module("System")
    
    Logger.start()
	System.println("\nSomething went wrong :(")
	System.println(err)
	Logger.stop()
    
    unload_module("System")
    unload_module("Logger")
end
